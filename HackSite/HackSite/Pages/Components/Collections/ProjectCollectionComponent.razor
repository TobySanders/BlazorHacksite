@using HackSite.Controllers
@using HackSite.Views
@using HackSite.Pages.Components.Collections.Fragments
@inject ProjectsController ProjectsController

<div class="form-group m">
    <label for="projects">Projects</label>

    @if (_projectViews == null)
    {
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Just finishing up...</span>
    </div>
    }
    else
    {
    <div id="projects" class="list-group">
        @foreach (var projectView in _projectViews)
            {
        <ProjectFragment ProjectView="projectView" OnSelected="OnItemSelected" OnDeselected="OnItemDeselcted"></ProjectFragment>
            }
    </div>
    }
</div>

@code{
    private ProjectView[] _projectViews;

    [Parameter]
    public List<Guid> SelectedProjects { get; set; }
    [Parameter]
    public EventCallback<List<Guid>> SelectedProjectsChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _projectViews = await ProjectsController.GetProjectsAsync();
    }

    private void OnItemSelected(Guid id)
    {
        SelectedProjects.Add(id);
        SelectedProjectsChanged.InvokeAsync(SelectedProjects);
    }
    private void OnItemDeselcted(Guid id)
    {
        SelectedProjects.Remove(id);
        SelectedProjectsChanged.InvokeAsync(SelectedProjects);
    }
}